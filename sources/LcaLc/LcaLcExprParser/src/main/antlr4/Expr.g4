grammar Expr;
@header { package pl.ll.lcalc.exprparser.autogenerated; }

calcexpt
 : 
   (expr | expr NEWLINE | NEWLINE)* 
 ;

expr
 : expr POW<assoc=right> expr #powExpr
 | MINUS expr                 #unaryMinusExpr
 | expr MOD expr              #modExpr
 | expr MULT expr             #multExpr
 | expr DIV expr              #divExpr
 | expr PLUS expr             #plusExpr
 | expr MINUS expr            #minusExpr 
 | NUMBER                     #atomExpr
 ;

NUMBER
 :
  INT | FLOAT 
 ;


PLUS : '+';
MINUS : '-';
MULT : '*';
DIV : '/';
MOD : '%';
POW : '^';
OPAR : '(';
CPAR : ')';

INT
 : [0-9]+
 ;

FLOAT
 : [0-9]+ '.' [0-9]* 
 | '.' [0-9]+
 ;

NEWLINE	      :   '\r'? '\n' 			     ;	

WS            :   [ \t]+ -> skip 	             ;